<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:annotation-config />

	<!-- Enables the Spring MVC @Controller programming model -->
	<tx:annotation-driven />

	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<mvc:annotation-driven validator="validator" />

	<context:property-placeholder location="classpath:application.properties" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="ro.certificate.manager.controller, ro.certificate.manager.service, ro.certificate.manager.utils, ro.certificate.manager.captcha, ro.certificate.manager.handler, ro.certificate.manager.service.utils" />

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="${file.maxUploadSize}" />
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="resolveLazily" value="true" />
	</beans:bean>

	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="${email.host}" />
		<beans:property name="port" value="${email.port}" />
		<beans:property name="username" value="${email.username}" />
		<beans:property name="password" value="${email.password}" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.debug">true</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.mime.charset">UTF-8</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="mailer" class="ro.certificate.manager.service.utils.Mailer">
		<beans:property name="mailSender" ref="mailSender" />
		<beans:property name="velocityEngine" ref="velocityEngine" />
	</beans:bean>

	<beans:bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<beans:property name="velocityProperties">
			<beans:props>
				<beans:prop key="resource.loader">class</beans:prop>
				<beans:prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>classpath:validation</beans:value>
				<beans:value>classpath:internationalization</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
		<beans:property name="cookieName" value="language"></beans:property>
		<beans:property name="cookieMaxAge" value="3600"></beans:property>
	</beans:bean>

	<mvc:interceptors>
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="lang" />
		</beans:bean>
	</mvc:interceptors>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
				<beans:ref bean="xmlMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>


	<beans:bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean" />

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<beans:bean id="xmlMessageConverter"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<beans:bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			<beans:bean
				class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- Configure to plugin JSON as request and response in method handler -->
</beans:beans>
